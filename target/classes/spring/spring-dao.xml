<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
			http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.1.xsd">
    <!-- 配置整合MyBatis过程 properties的属性：${url}-->
    <!-- 1：配置数据库相关参数 -->
    <context:property-placeholder location="classpath:jdbc.properties" />
    
    <!-- 2：数据库连接池 -->
    <bean id="dataSource"
        class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="${driver}" />
        <property name="jdbcUrl" value="${url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${password}" />
        
        <!-- c3p0连接池的私有属性 -->
        <property name="maxPoolSize" value="30" />
        <property name="minPoolSize" value="10" />
        <!-- 关闭连接后不自动commit -->
        <property name="autoCommitOnClose" value="false" />
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="1000" />
        <!-- 当获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="2" />
    </bean>
    <!-- 约定大于配置，善用框架的自动扫描功能 -->
    <!-- 3：配置SqlSessionFactory对象 -->
    
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
   		<!-- 注入数据库连接池 -->
   		<property name="dataSource" ref="dataSource"/>
   		<!-- 配置MyBatis全局配置文件 -->
   		<property name="configLocation" value="classpath:mybatis-config.xml"/>
   		<!-- 扫描entity包 支持使用别名org.seckill.entity.Seckill -> Seckill
   		 	  多个包时可以分开写 value="org.seckill.entity;seckill.entity2" 
   		-->
   		<property name="typeAliasesPackage" value="org.seckill.entity"/>
   		<!-- 扫描sql配置文件：mapper需要的xml文件 -->
   		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
   </bean>
   
    <!-- 4:配置扫描Dao接口包，动态实现Dao接口，注入到Spring容器中
    	不设置ID因为无其他地方引用，自动运行 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入SqlSessionFactory 
        	 sqlSessionFactoryBeanName:防止处理时属性未被加载(jdbc.properties没被加载时，dataSource就是错误的)
        	 通过BeanName后处理，使用Mybatis时再加载
        -->
        <property name="sqlSessionFactoryBeanName"
            value="sqlSessionFactory">
        </property>
        <!-- 给出需要扫描DAO接口包:
        	 扫描特定的包，把包内的dao接口自动实现一个实现类，并注入Spring容器。
         -->
        <property name="basePackage" value="org.seckill.dao" />
    </bean>
</beans>