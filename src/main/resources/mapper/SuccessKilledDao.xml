<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.seckill.dao.SuccessKilledDao">
	<insert id="insertSuccessKilled">
		<!--sql技巧 过滤主键重复：主键冲突，报错 ，
		添加ignore (忽略)不报错，但是返回结果是影响了0 rows affected   -->
		insert ignore into Success_killed(seckill_id,user_phone,state)
		values(#{seckillId},#{userPhone},0);
	</insert>

	<select id="queryByIdWithSeckill" resultType="SuccessKilled">
		<!-- 根据id查询SuccessKilled并携带Seckill实体 -->
		<!-- 如果告诉MyBatis把结果映射到SuccessKilled同时把seckill实体也映射
			s.seckill_id "seckill.seckill_id" 。
			加""是为了数据返回时MyBatis识别("seckill.seckill_id"本质上是OGNL表达式)，
			已经开启了使用列别名替换列和驼峰命名转换seckill.seckill_id=seckill.seckillId -->
		<!-- 可以自由控制SQL -->
		select 
			sk.seckill_id,
			sk.user_phone,
			sk.state,
			sk.create_time,
			s.seckill_id "seckill.seckill_id",<!-- 通过别名 告诉mybatis把值赋到SuccessKilled的 -->
			s.name "seckill.name",
			s.number "seckill.number",
			s.start_time "seckill.start_time",
			s.end_time "seckill.end_time",
			s.create_time "seckill.create_time"
			from Success_killed sk
		inner join seckill s on sk.seckill_id =s.seckill_id
		where sk.seckill_id = #{seckillId} 
		and   sk.user_phone = #{userPhone};
	</select>
</mapper>